{"version":3,"file":"../../style.css","sources":["style.scss","_bourbon.scss","settings/_prefixer.scss","settings/_px-to-em.scss","settings/_asset-pipeline.scss","functions/_assign-inputs.scss","functions/_contains.scss","functions/_contains-falsy.scss","functions/_is-length.scss","functions/_is-light.scss","functions/_is-number.scss","functions/_is-size.scss","functions/_px-to-em.scss","functions/_px-to-rem.scss","functions/_shade.scss","functions/_strip-units.scss","functions/_tint.scss","functions/_transition-property-name.scss","functions/_unpack.scss","functions/_modular-scale.scss","helpers/_convert-units.scss","helpers/_directional-values.scss","helpers/_font-source-declaration.scss","helpers/_gradient-positions-parser.scss","helpers/_linear-angle-parser.scss","helpers/_linear-gradient-parser.scss","helpers/_linear-positions-parser.scss","helpers/_linear-side-corner-parser.scss","helpers/_radial-arg-parser.scss","helpers/_radial-positions-parser.scss","helpers/_radial-gradient-parser.scss","helpers/_render-gradients.scss","helpers/_shape-size-stripper.scss","helpers/_str-to-num.scss","css3/_animation.scss","css3/_appearance.scss","css3/_backface-visibility.scss","css3/_background.scss","css3/_background-image.scss","css3/_border-image.scss","css3/_calc.scss","css3/_columns.scss","css3/_filter.scss","css3/_flex-box.scss","css3/_font-face.scss","css3/_font-feature-settings.scss","css3/_hidpi-media-query.scss","css3/_hyphens.scss","css3/_image-rendering.scss","css3/_keyframes.scss","css3/_linear-gradient.scss","css3/_perspective.scss","css3/_placeholder.scss","css3/_radial-gradient.scss","css3/_selection.scss","css3/_text-decoration.scss","css3/_transform.scss","css3/_transition.scss","css3/_user-select.scss","addons/_border-color.scss","addons/_border-radius.scss","addons/_border-style.scss","addons/_border-width.scss","addons/_buttons.scss","addons/_clearfix.scss","addons/_ellipsis.scss","addons/_font-stacks.scss","addons/_hide-text.scss","addons/_margin.scss","addons/_padding.scss","addons/_position.scss","addons/_prefixer.scss","addons/_retina-image.scss","addons/_size.scss","addons/_text-inputs.scss","addons/_timing-functions.scss","addons/_triangle.scss","addons/_word-wrap.scss","_bourbon-deprecated-upcoming.scss","_reset.scss","_layout.scss","_masthead.scss","_menu.scss","_post.scss","_content.scss","_comments.scss","_footer.scss","_archives.scss","_widgets.scss","_icons.scss","_jetpack.scss"],"sourcesContent":["/*\nTheme Name: Origami\nAuthor: SiteOrigin\nAuthor URI: https://siteorigin.com/\nTheme URI: https://siteorigin.com/theme/origami\nDescription: Origami is a simple, responsive media blogging theme that places strong emphasis on your content. It looks great on mobile devices, even the videos and galleries scale to fit small screens. The options panel is easy to understand with a minimal set of options. Origami includes a powerful drag and drop page builder for creating unlimited page layouts. So you can use Origami as a standard photography blog or a complete business website. We offer free and premium support on our support <a href=\"https://siteorigin.com/thread/\">forums</a> (https://siteorigin.com/thread/).\nVersion: dev\nTested up to: 5.6\nRequires at least: 4.7\nRequires PHP: 5.6.20\nLicense: GNU General Public License v2 or later\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\nText Domain: origami\nTags: blog, photography, portfolio, one-column, custom-background, custom-colors, custom-header, custom-logo, custom-menu, editor-style, featured-images, footer-widgets, sticky-post, theme-options, threaded-comments, translation-ready\n*/\n\n@import \"bourbon\";\n@import \"reset\";\n\n@import \"layout\";\n@import \"masthead\";\n@import \"menu\";\n@import \"post\";\n@import \"content\";\n@import \"comments\";\n@import \"footer\";\n@import \"archives\";\n@import \"widgets\";\n@import \"icons\";\n@import \"jetpack\";","// Bourbon 4.2.7\n// http://bourbon.io\n// Copyright 2011-2015 thoughtbot, inc.\n// MIT License\n\n@import \"settings/prefixer\";\n@import \"settings/px-to-em\";\n@import \"settings/asset-pipeline\";\n\n@import \"functions/assign-inputs\";\n@import \"functions/contains\";\n@import \"functions/contains-falsy\";\n@import \"functions/is-length\";\n@import \"functions/is-light\";\n@import \"functions/is-number\";\n@import \"functions/is-size\";\n@import \"functions/px-to-em\";\n@import \"functions/px-to-rem\";\n@import \"functions/shade\";\n@import \"functions/strip-units\";\n@import \"functions/tint\";\n@import \"functions/transition-property-name\";\n@import \"functions/unpack\";\n@import \"functions/modular-scale\";\n\n@import \"helpers/convert-units\";\n@import \"helpers/directional-values\";\n@import \"helpers/font-source-declaration\";\n@import \"helpers/gradient-positions-parser\";\n@import \"helpers/linear-angle-parser\";\n@import \"helpers/linear-gradient-parser\";\n@import \"helpers/linear-positions-parser\";\n@import \"helpers/linear-side-corner-parser\";\n@import \"helpers/radial-arg-parser\";\n@import \"helpers/radial-positions-parser\";\n@import \"helpers/radial-gradient-parser\";\n@import \"helpers/render-gradients\";\n@import \"helpers/shape-size-stripper\";\n@import \"helpers/str-to-num\";\n\n@import \"css3/animation\";\n@import \"css3/appearance\";\n@import \"css3/backface-visibility\";\n@import \"css3/background\";\n@import \"css3/background-image\";\n@import \"css3/border-image\";\n@import \"css3/calc\";\n@import \"css3/columns\";\n@import \"css3/filter\";\n@import \"css3/flex-box\";\n@import \"css3/font-face\";\n@import \"css3/font-feature-settings\";\n@import \"css3/hidpi-media-query\";\n@import \"css3/hyphens\";\n@import \"css3/image-rendering\";\n@import \"css3/keyframes\";\n@import \"css3/linear-gradient\";\n@import \"css3/perspective\";\n@import \"css3/placeholder\";\n@import \"css3/radial-gradient\";\n@import \"css3/selection\";\n@import \"css3/text-decoration\";\n@import \"css3/transform\";\n@import \"css3/transition\";\n@import \"css3/user-select\";\n\n@import \"addons/border-color\";\n@import \"addons/border-radius\";\n@import \"addons/border-style\";\n@import \"addons/border-width\";\n@import \"addons/buttons\";\n@import \"addons/clearfix\";\n@import \"addons/ellipsis\";\n@import \"addons/font-stacks\";\n@import \"addons/hide-text\";\n@import \"addons/margin\";\n@import \"addons/padding\";\n@import \"addons/position\";\n@import \"addons/prefixer\";\n@import \"addons/retina-image\";\n@import \"addons/size\";\n@import \"addons/text-inputs\";\n@import \"addons/timing-functions\";\n@import \"addons/triangle\";\n@import \"addons/word-wrap\";\n\n@import \"bourbon-deprecated-upcoming\";\n","@charset \"UTF-8\";\n\n/// Global variables to enable or disable vendor prefixes\n\n$prefix-for-webkit:    true !default;\n$prefix-for-mozilla:   true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera:     true !default;\n$prefix-for-spec:      true !default;\n","$em-base: 16px !default;\n","@charset \"UTF-8\";\n\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\n///\n/// @type Bool\n\n$asset-pipeline: false !default;\n","@function assign-inputs($inputs, $pseudo: null) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list contains a value(s).\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @param {List} $values\n///   A single value or list of values to check for.\n///\n/// @example scss - Usage\n///   contains($list, $value)\n///\n/// @return {Bool}\n\n@function contains($list, $values...) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list does not contains a value.\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @return {Bool}\n\n@function contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS length.\n///\n/// @param {String} $value\n\n@function is-length($value) {\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\n       or index(auto inherit initial 0, $value)\n       or (type-of($value) == \"number\" and not(unitless($value))));\n}\n","@charset \"UTF-8\";\n\n/// Programatically determines whether a color is light or dark.\n///\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\n///\n/// @param {Color (Hex)} $color\n///\n/// @example scss - Usage\n///   is-light($color)\n///\n/// @return {Bool}\n\n@function is-light($hex-color) {\n  $-local-red: red(rgba($hex-color, 1));\n  $-local-green: green(rgba($hex-color, 1));\n  $-local-blue: blue(rgba($hex-color, 1));\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\n\n  @return $-local-lightness > 0.6;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid number.\n///\n/// @param {Number} $value\n///\n/// @require {function} contains\n\n@function is-number($value) {\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS size.\n///\n/// @param {String} $value\n///\n/// @require {function} contains\n/// @require {function} is-length\n\n@function is-size($value) {\n  @return is-length($value)\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n","// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n///\n/// @return {Color}\n\n@function shade($color, $percent) {\n  @return mix(#000, $color, $percent);\n}\n","@charset \"UTF-8\";\n\n/// Strips the unit from a number.\n///\n/// @param {Number (With Unit)} $value\n///\n/// @example scss - Usage\n///   $dimension: strip-units(10em);\n///\n/// @example css - CSS Output\n///   $dimension: 10;\n///\n/// @return {Number (Unitless)}\n\n@function strip-units($value) {\n  @return ($value / ($value * 0 + 1));\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n","// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\n//************************************************************************//\n@function transition-property-names($props, $vendor: false) {\n  $new-props: ();\n\n  @each $prop in $props {\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n  }\n\n  @return $new-props;\n}\n\n@function transition-property-name($prop, $vendor: false) {\n  // put other properties that need to be prefixed here aswell\n  @if $vendor and $prop == transform {\n    @return unquote('-'+$vendor+'-'+$prop);\n  }\n  @else {\n    @return $prop;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Converts shorthand to the 4-value syntax.\n///\n/// @param {List} $shorthand\n///\n/// @example scss - Usage\n///   .element {\n///     margin: unpack(1em 2em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin: 1em 2em 1em 2em;\n///   }\n\n@function unpack($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  } @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  } @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  } @else {\n    @return $shorthand;\n  }\n}\n","// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n$modular-scale-ratio: $perfect-fourth !default;\n$modular-scale-base: em($em-base) !default;\n\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n","//************************************************************************//\n// Helper function for str-to-num fn.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _convert-units($number, $unit) {\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\n  $index: index($strings, $unit);\n\n  @if not $index {\n    @warn \"Unknown unit `#{$unit}`.\";\n    @return false;\n  }\n\n  @if type-of($number) != \"number\" {\n    @warn \"`#{$number} is not a number`\";\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n","@charset \"UTF-8\";\n\n/// Directional-property mixins are shorthands for writing properties like the following\n///\n/// @ignore You can also use `false` instead of `null`.\n///\n/// @param {List} $vals\n///   List of directional values\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dotted null);\n///     @include margin(null 0 10px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: dotted;\n///     border-top-style: dotted;\n///     margin-bottom: 10px;\n///     margin-left: 0;\n///     margin-right: 0;\n///   }\n///\n/// @require {function} contains-falsy\n///\n/// @return {List}\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $a: nth($vals, 1);\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\n  @else if $b == $d                      { $output: $a $b $c;    }\n  @else                                  { $output: $a $b $c $d; }\n\n  @return $output;\n}\n\n/// Output directional properties, for instance `margin`.\n///\n/// @access private\n///\n/// @param {String} $pre\n///   Prefix to use\n/// @param {String} $suf\n///   Suffix to use\n/// @param {List} $vals\n///   List of values\n///\n/// @require {function} collapse-directionals\n/// @require {function} contains-falsy\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n  } @else {\n    #{$all}: $vals;\n  }\n}\n","// Used for creating the source string for fonts using @font-face\n// Reference: http://goo.gl/Ru1bKP\n\n@function font-url-prefixer($asset-pipeline) {\n  @if $asset-pipeline == true {\n    @return font-url;\n  } @else {\n    @return url;\n  }\n}\n\n@function font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats,\n  $font-url) {\n\n  $src: ();\n\n  $formats-map: (\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\n  );\n\n  @each $key, $values in $formats-map {\n    @if contains($file-formats, $key) {\n      $file-path: nth($values, 1);\n      $font-format: nth($values, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    }\n  }\n\n  @return $src;\n}\n","@function _gradient-positions-parser($gradient-type, $gradient-positions) {\n  @if $gradient-positions\n  and ($gradient-type == linear)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _linear-positions-parser($gradient-positions);\n  }\n  @else if $gradient-positions\n  and ($gradient-type == radial)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _radial-positions-parser($gradient-positions);\n  }\n  @return $gradient-positions;\n}\n","// Private function for linear-gradient-parser\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\n  $offset: null;\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\n\n  @if ($unit-long == \"grad\") or\n      ($unit-long == \"turn\") {\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\n  }\n\n  @else if ($unit-short == \"deg\") or\n           ($unit-short == \"rad\") {\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\n  }\n\n  @if $offset {\n    $num: _str-to-num($first-val);\n\n    @return (\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\n      spec-image: $image\n    );\n  }\n}\n","@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: is-number(str-slice($first-val, 1, 1));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","@function _linear-positions-parser($pos) {\n  $type: type-of(nth($pos, 1));\n  $spec: null;\n  $degree: null;\n  $side: null;\n  $corner: null;\n  $length: length($pos);\n  // Parse Side and corner positions\n  @if ($length > 1) {\n    @if nth($pos, 1) == \"to\" { // Newer syntax\n      $side: nth($pos, 2);\n\n      @if $length == 2 { // eg. to top\n        // Swap for backwards compatibility\n        $degree: _position-flipper(nth($pos, 2));\n      }\n      @else if $length == 3 { // eg. to top left\n        $corner: nth($pos, 3);\n      }\n    }\n    @else if $length == 2 { // Older syntax (\"top left\")\n      $side: _position-flipper(nth($pos, 1));\n      $corner: _position-flipper(nth($pos, 2));\n    }\n\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    $spec: to $side $corner;\n  }\n  @else if $length == 1 {\n    // Swap for backwards compatibility\n    @if $type == string {\n      $degree: $pos;\n      $spec: to _position-flipper($pos);\n    }\n    @else {\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\n      $spec: $pos;\n    }\n  }\n  $degree: unquote($degree + \",\");\n  $spec:   unquote($spec + \",\");\n  @return $degree $spec;\n}\n\n@function _position-flipper($pos) {\n  @return if($pos == left, right, null)\n         if($pos == right, left, null)\n         if($pos == top, bottom, null)\n         if($pos == bottom, top, null);\n}\n","// Private function for linear-gradient-parser\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\n  $val-1: str-slice($first-val, 1, $has-multiple-vals - 1);\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\n  $val-3: null;\n  $has-val-3: str-index($val-2, \" \");\n\n  @if $has-val-3 {\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\n    $val-2: str-slice($val-2, 1, $has-val-3 - 1);\n  }\n\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\n  $pos: unquote($pos + \"\");\n\n  // Use old spec for webkit\n  @if $val-1 == \"to\" {\n    @return (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  // Bring the code up to spec\n  @else {\n    @return (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n}\n","@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\n  @each $value in $g1, $g2 {\n    $first-val: nth($value, 1);\n    $pos-type:  type-of($first-val);\n    $spec-at-index: null;\n\n    // Determine if spec was passed to mixin\n    @if type-of($value) == list {\n      $spec-at-index: if(index($value, at), index($value, at), false);\n    }\n    @if $spec-at-index {\n      @if $spec-at-index > 1 {\n        @for $i from 1 through ($spec-at-index - 1) {\n          $shape-size: $shape-size nth($value, $i);\n        }\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      @else if $spec-at-index == 1 {\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      $g1: null;\n    }\n\n    // If not spec calculate correct values\n    @else {\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\n        @if ($pos-type == number)\n        or ($first-val == \"center\")\n        or ($first-val == \"top\")\n        or ($first-val == \"right\")\n        or ($first-val == \"bottom\")\n        or ($first-val == \"left\") {\n\n          $pos: $value;\n\n          @if $pos == $g1 {\n            $g1: null;\n          }\n        }\n\n        @else if\n           ($first-val == \"ellipse\")\n        or ($first-val == \"circle\")\n        or ($first-val == \"closest-side\")\n        or ($first-val == \"closest-corner\")\n        or ($first-val == \"farthest-side\")\n        or ($first-val == \"farthest-corner\")\n        or ($first-val == \"contain\")\n        or ($first-val == \"cover\") {\n\n          $shape-size: $value;\n\n          @if $value == $g1 {\n            $g1: null;\n          }\n\n          @else if $value == $g2 {\n            $g2: null;\n          }\n        }\n      }\n    }\n  }\n  @return $g1, $g2, $pos, $shape-size;\n}\n","@function _radial-positions-parser($gradient-pos) {\n  $shape-size: nth($gradient-pos, 1);\n  $pos:        nth($gradient-pos, 2);\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\n             unquote(if($shape-size, \"#{$shape-size},\", null));\n  $pos-spec: if($pos, \"at #{$pos}\", null);\n\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\n\n  // Add comma\n  @if ($spec != \"  \") {\n    $spec: \"#{$spec},\";\n  }\n\n  @return $pre-spec $spec;\n}\n","@function _radial-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $is-spec-syntax: str-index($first-val, \"at\");\n\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n    $pos: append($pos, $keyword, comma);\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if $is-spec-syntax == 1 {\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\n\n    $gradients: (\n      webkit-image: null,\n      spec-image: $image\n    );\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","// User for linear and radial gradients within background-image or border-image properties\n\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\n  $pre-spec: null;\n  $spec: null;\n  $vendor-gradients: null;\n  @if $gradient-type == linear {\n    @if $gradient-positions {\n      $pre-spec: nth($gradient-positions, 1);\n      $spec:     nth($gradient-positions, 2);\n    }\n  }\n  @else if $gradient-type == radial {\n    $pre-spec: nth($gradient-positions, 1);\n    $spec:     nth($gradient-positions, 2);\n  }\n\n  @if $vendor {\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\n  }\n  @else if $vendor == false {\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\n    $vendor-gradients: unquote($vendor-gradients);\n  }\n  @return $vendor-gradients;\n}\n","@function _shape-size-stripper($shape-size) {\n  $shape-size-spec: null;\n  @each $value in $shape-size {\n    @if ($value == \"cover\") or ($value == \"contain\") {\n      $value: null;\n    }\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\n  }\n  @return $shape-size-spec;\n}\n","//************************************************************************//\n// Helper function for linear/radial-gradient-parsers.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _str-to-num($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    }\n\n    @else if $character == \".\" {\n      $divider: 1;\n    }\n\n    @else {\n      @if not $index {\n        $result: if($minus, $result * -1, $result);\n        @return _convert-units($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n\n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n  @return if($minus, $result * -1, $result);\n}\n","// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\n\n@mixin animation($animations...) {\n  @include prefixer(animation, $animations, webkit moz spec);\n}\n\n@mixin animation-name($names...) {\n  @include prefixer(animation-name, $names, webkit moz spec);\n}\n\n@mixin animation-duration($times...) {\n  @include prefixer(animation-duration, $times, webkit moz spec);\n}\n\n@mixin animation-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\n}\n\n@mixin animation-iteration-count($values...) {\n  // infinite | <number>\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\n}\n\n@mixin animation-direction($directions...) {\n  // normal | alternate\n  @include prefixer(animation-direction, $directions, webkit moz spec);\n}\n\n@mixin animation-play-state($states...) {\n  // running | paused\n  @include prefixer(animation-play-state, $states, webkit moz spec);\n}\n\n@mixin animation-delay($times...) {\n  @include prefixer(animation-delay, $times, webkit moz spec);\n}\n\n@mixin animation-fill-mode($modes...) {\n  // none | forwards | backwards | both\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\n}\n","@mixin appearance($value) {\n  @include prefixer(appearance, $value, webkit moz ms o spec);\n}\n","@mixin backface-visibility($visibility) {\n  @include prefixer(backface-visibility, $visibility, webkit spec);\n}\n","//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or $background-type == list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 1, 3);\n      $gradient-type: str-slice($background-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n      $spec-background:   $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n","//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 1, 3);\n      $gradient-type: str-slice($image, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n        $spec-image:   $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n","@mixin border-image($borders...) {\n  $webkit-borders: ();\n  $spec-borders: ();\n\n  @each $border in $borders {\n    $webkit-border: ();\n    $spec-border: ();\n    $border-type: type-of($border);\n\n    @if $border-type == string or list {\n      $border-str: if($border-type == list, nth($border, 1), $border);\n\n      $url-str:       str-slice($border-str, 1, 3);\n      $gradient-type: str-slice($border-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n    }\n\n    @else {\n      $webkit-border: $border;\n      $spec-border:   $border;\n    }\n\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\n  }\n\n  -webkit-border-image: $webkit-borders;\n          border-image: $spec-borders;\n          border-style: solid;\n}\n\n//Examples:\n// @include border-image(url(\"image.png\"));\n// @include border-image(url(\"image.png\") 20 stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow));\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\n","@mixin calc($property, $value) {\n  #{$property}: -webkit-calc(#{$value});\n  #{$property}: calc(#{$value});\n}\n","@mixin columns($arg: auto) {\n  // <column-count> || <column-width>\n  @include prefixer(columns, $arg, webkit moz spec);\n}\n\n@mixin column-count($int: auto) {\n  // auto || integer\n  @include prefixer(column-count, $int, webkit moz spec);\n}\n\n@mixin column-gap($length: normal) {\n  // normal || length\n  @include prefixer(column-gap, $length, webkit moz spec);\n}\n\n@mixin column-fill($arg: auto) {\n  // auto || length\n  @include prefixer(column-fill, $arg, webkit moz spec);\n}\n\n@mixin column-rule($arg) {\n  // <border-width> || <border-style> || <color>\n  @include prefixer(column-rule, $arg, webkit moz spec);\n}\n\n@mixin column-rule-color($color) {\n  @include prefixer(column-rule-color, $color, webkit moz spec);\n}\n\n@mixin column-rule-style($style: none) {\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\n  @include prefixer(column-rule-style, $style, webkit moz spec);\n}\n\n@mixin column-rule-width ($width: none) {\n  @include prefixer(column-rule-width, $width, webkit moz spec);\n}\n\n@mixin column-span($arg: none) {\n  // none || all\n  @include prefixer(column-span, $arg, webkit moz spec);\n}\n\n@mixin column-width($length: auto) {\n  // auto || length\n  @include prefixer(column-width, $length, webkit moz spec);\n}\n","@mixin filter($function: none) {\n  // <filter-function> [<filter-function]* | none\n  @include prefixer(filter, $function, webkit spec);\n}\n","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n","@mixin font-face(\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $asset-pipeline: $asset-pipeline,\n  $file-formats: eot woff2 woff ttf svg) {\n\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\n\n  @font-face {\n    font-family: $font-family;\n    font-style: $style;\n    font-weight: $weight;\n\n    src: font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats,\n      $font-url-prefix\n    );\n  }\n}\n","@mixin font-feature-settings($settings...) {\n  @if length($settings) == 0 { $settings: none; }\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\n}\n","// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\n@mixin hidpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min--moz-device-pixel-ratio: $ratio),\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\n  only screen and (min-resolution: round($ratio * 96dpi)),\n  only screen and (min-resolution: $ratio * 1dppx) {\n    @content;\n  }\n}\n","@mixin hyphens($hyphenation: none) {\n  // none | manual | auto\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\n}\n","@mixin image-rendering ($mode:auto) {\n\n  @if ($mode == crisp-edges) {\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -o-crisp-edges;\n    image-rendering: -webkit-optimize-contrast;\n    image-rendering: crisp-edges;\n  }\n\n  @else {\n    image-rendering: $mode;\n  }\n}\n","// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n","@mixin linear-gradient($pos, $g1, $g2: null,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\n    $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Set $g1 as the default fallback color\n  $fallback-color: nth($g1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n","@mixin perspective($depth: none) {\n  // none | <length>\n  @include prefixer(perspective, $depth, webkit moz spec);\n}\n\n@mixin perspective-origin($value: 50% 50%) {\n  @include prefixer(perspective-origin, $value, webkit moz spec);\n}\n","@mixin placeholder {\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n","// Requires Sass 3.1+\n@mixin radial-gradient($g1, $g2,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\n  $g1:  nth($data, 1);\n  $g2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $g1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\n  $pos:        if($pos, \"#{$pos}, \", null);\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(#{$pos}#{$shape-size}#{$full});\n  background-image: radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full});\n}\n","@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@mixin text-decoration($value) {\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\n  @include prefixer(text-decoration, $value, moz);\n}\n\n@mixin text-decoration-line($line: none) {\n// none || underline || overline || line-through\n  @include prefixer(text-decoration-line, $line, moz);\n}\n\n@mixin text-decoration-style($style: solid) {\n// solid || double || dotted || dashed || wavy\n  @include prefixer(text-decoration-style, $style, moz webkit);\n}\n\n@mixin text-decoration-color($color: currentColor) {\n// currentColor || <color>\n  @include prefixer(text-decoration-color, $color, moz);\n}\n","@mixin transform($property: none) {\n  // none | <transform-function>\n  @include prefixer(transform, $property, webkit moz ms o spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n  // x-axis - left | center | right  | length | %\n  // y-axis - top  | center | bottom | length | %\n  // z-axis -                          length\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\n}\n\n@mixin transform-style($style: flat) {\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\n}\n","// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n      $moz:    append($moz,    $list2);\n      $spec:   append($spec,   $list3);\n    } @else {\n      $webkit: append($webkit, $list, comma);\n      $moz:    append($moz,    $list, comma);\n      $spec:   append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  } @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    } @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property($properties...) {\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\n     -moz-transition-property: transition-property-names($properties, \"moz\");\n          transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n","@mixin user-select($value: none) {\n  @include prefixer(user-select, $value, webkit moz ms spec);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-left-color: #e8ae1a;\n///     border-right-color: #76cd9c;\n///     border-top-color: #a60b55;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-color`\n\n@mixin border-color($vals...) {\n  @include directional-property(border, color, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\n///\n/// @param {Number} $radii\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element-one {\n///     @include border-top-radius(5px);\n///   }\n///\n///   .element-two {\n///     @include border-left-radius(3px);\n///   }\n///\n/// @example css - CSS Output\n///   .element-one {\n///     border-top-left-radius: 5px;\n///     border-top-right-radius: 5px;\n///   }\n///\n///   .element-two {\n///     border-bottom-left-radius: 3px;\n///     border-top-left-radius: 3px;\n///   }\n///\n/// @output `border-radius`\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dashed null solid);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: solid;\n///     border-top-style: dashed;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-style`\n\n@mixin border-style($vals...) {\n  @include directional-property(border, style, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-width(1em null 20px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-width: 20px;\n///     border-top-width: 1em;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-width`\n\n@mixin border-width($vals...) {\n  @include directional-property(border, width, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\n///\n/// @example scss - Usage\n///   #{$all-buttons} {\n///     background-color: #f00;\n///   }\n///\n///   #{$all-buttons-focus},\n///   #{$all-buttons-hover} {\n///     background-color: #0f0;\n///   }\n///\n///   #{$all-buttons-active} {\n///     background-color: #00f;\n///   }\n///\n/// @example css - CSS Output\n///   button,\n///   input[type=\"button\"],\n///   input[type=\"reset\"],\n///   input[type=\"submit\"] {\n///     background-color: #f00;\n///   }\n///\n///   button:focus,\n///   input[type=\"button\"]:focus,\n///   input[type=\"reset\"]:focus,\n///   input[type=\"submit\"]:focus,\n///   button:hover,\n///   input[type=\"button\"]:hover,\n///   input[type=\"reset\"]:hover,\n///   input[type=\"submit\"]:hover {\n///     background-color: #0f0;\n///   }\n///\n///   button:active,\n///   input[type=\"button\"]:active,\n///   input[type=\"reset\"]:active,\n///   input[type=\"submit\"]:active {\n///     background-color: #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n///\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\n\n$buttons-list: 'button',\n               'input[type=\"button\"]',\n               'input[type=\"reset\"]',\n               'input[type=\"submit\"]';\n\n$all-buttons:        assign-inputs($buttons-list);\n$all-buttons-active: assign-inputs($buttons-list, active);\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\n\n$all-button-inputs:        $all-buttons;\n$all-button-inputs-active: $all-buttons-active;\n$all-button-inputs-focus:  $all-buttons-focus;\n$all-button-inputs-hover:  $all-buttons-hover;\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Truncates text and adds an ellipsis to represent overflow.\n///\n/// @param {Number} $width [100%]\n///   Max-width for the string to respect before being truncated\n///\n/// @example scss - Usage\n///   .element {\n///     @include ellipsis;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: inline-block;\n///     max-width: 100%;\n///     overflow: hidden;\n///     text-overflow: ellipsis;\n///     white-space: nowrap;\n///     word-wrap: normal;\n///   }\n\n@mixin ellipsis($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n","@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n","/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\n///\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\n///\n/// @example scss - Usage\n///   .element {\n///     @include hide-text;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n///\n/// @todo Remove height argument in v5.0.0\n\n@mixin hide-text($height: null) {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n\n  @if $height {\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include margin(null 10px 3em 20vh);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-bottom: 3em;\n///     margin-left: 20vh;\n///     margin-right: 10px;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `margin`\n\n@mixin margin($vals...) {\n  @include directional-property(margin, false, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include padding(12vh null 10px 5%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     padding-bottom: 10px;\n///     padding-left: 5%;\n///     padding-top: 12vh;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `padding`\n\n@mixin padding($vals...) {\n  @include directional-property(padding, false, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\n///\n/// @param {Position} $position [relative]\n///   A CSS position value\n///\n/// @param {Arglist} $coordinates [null null null null]\n///   List of values that correspond to the 4-value syntax for the edges of a box\n///\n/// @example scss - Usage\n///   .element {\n///     @include position(absolute, 0 null null 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     left: 10em;\n///     position: absolute;\n///     top: 0;\n///   }\n///\n/// @require {function} is-length\n/// @require {function} unpack\n\n@mixin position($position: relative, $coordinates: null null null null) {\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $offsets: (\n    top:    nth($coordinates, 1),\n    right:  nth($coordinates, 2),\n    bottom: nth($coordinates, 3),\n    left:   nth($coordinates, 4)\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\n  @if $asset-pipeline {\n    background-image: image-url(\"#{$filename}.#{$extension}\");\n  } @else {\n    background-image:       url(\"#{$filename}.#{$extension}\");\n  }\n\n  @include hidpi {\n    @if $asset-pipeline {\n      @if $retina-filename {\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    } @else {\n      @if $retina-filename {\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    background-size: $background-size;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element.\n///\n/// @param {List} $size\n///   A list of at most 2 size values.\n///\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\n///\n/// @example scss - Usage\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   .second-element {\n///     @include size(auto 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\n\n@mixin size($value) {\n  $width: nth($value, 1);\n  $height: $width;\n\n  @if length($value) > 1 {\n    $height: nth($value, 2);\n  }\n\n  @if is-size($height) {\n    height: $height;\n  } @else {\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\n  }\n\n  @if is-size($width) {\n    width: $width;\n  } @else {\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\n///\n/// @example scss - Usage\n///   #{$all-text-inputs} {\n///     border: 1px solid #f00;\n///   }\n///\n///   #{$all-text-inputs-focus},\n///   #{$all-text-inputs-hover} {\n///     border: 1px solid #0f0;\n///   }\n///\n///   #{$all-text-inputs-active} {\n///     border: 1px solid #00f;\n///   }\n///\n/// @example css - CSS Output\n///   input[type=\"color\"],\n///   input[type=\"date\"],\n///   input[type=\"datetime\"],\n///   input[type=\"datetime-local\"],\n///   input[type=\"email\"],\n///   input[type=\"month\"],\n///   input[type=\"number\"],\n///   input[type=\"password\"],\n///   input[type=\"search\"],\n///   input[type=\"tel\"],\n///   input[type=\"text\"],\n///   input[type=\"time\"],\n///   input[type=\"url\"],\n///   input[type=\"week\"],\n///   textarea {\n///     border: 1px solid #f00;\n///   }\n///\n///   input[type=\"color\"]:focus,\n///   input[type=\"date\"]:focus,\n///   input[type=\"datetime\"]:focus,\n///   input[type=\"datetime-local\"]:focus,\n///   input[type=\"email\"]:focus,\n///   input[type=\"month\"]:focus,\n///   input[type=\"number\"]:focus,\n///   input[type=\"password\"]:focus,\n///   input[type=\"search\"]:focus,\n///   input[type=\"tel\"]:focus,\n///   input[type=\"text\"]:focus,\n///   input[type=\"time\"]:focus,\n///   input[type=\"url\"]:focus,\n///   input[type=\"week\"]:focus,\n///   textarea:focus,\n///   input[type=\"color\"]:hover,\n///   input[type=\"date\"]:hover,\n///   input[type=\"datetime\"]:hover,\n///   input[type=\"datetime-local\"]:hover,\n///   input[type=\"email\"]:hover,\n///   input[type=\"month\"]:hover,\n///   input[type=\"number\"]:hover,\n///   input[type=\"password\"]:hover,\n///   input[type=\"search\"]:hover,\n///   input[type=\"tel\"]:hover,\n///   input[type=\"text\"]:hover,\n///   input[type=\"time\"]:hover,\n///   input[type=\"url\"]:hover,\n///   input[type=\"week\"]:hover,\n///   textarea:hover {\n///     border: 1px solid #0f0;\n///   }\n///\n///   input[type=\"color\"]:active,\n///   input[type=\"date\"]:active,\n///   input[type=\"datetime\"]:active,\n///   input[type=\"datetime-local\"]:active,\n///   input[type=\"email\"]:active,\n///   input[type=\"month\"]:active,\n///   input[type=\"number\"]:active,\n///   input[type=\"password\"]:active,\n///   input[type=\"search\"]:active,\n///   input[type=\"tel\"]:active,\n///   input[type=\"text\"]:active,\n///   input[type=\"time\"]:active,\n///   input[type=\"url\"]:active,\n///   input[type=\"week\"]:active,\n///   textarea:active {\n///     border: 1px solid #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n\n$text-inputs-list: 'input[type=\"color\"]',\n                   'input[type=\"date\"]',\n                   'input[type=\"datetime\"]',\n                   'input[type=\"datetime-local\"]',\n                   'input[type=\"email\"]',\n                   'input[type=\"month\"]',\n                   'input[type=\"number\"]',\n                   'input[type=\"password\"]',\n                   'input[type=\"search\"]',\n                   'input[type=\"tel\"]',\n                   'input[type=\"text\"]',\n                   'input[type=\"time\"]',\n                   'input[type=\"url\"]',\n                   'input[type=\"week\"]',\n                   'input:not([type])',\n                   'textarea';\n\n$all-text-inputs:        assign-inputs($text-inputs-list);\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\n","@charset \"UTF-8\";\n\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\n///\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\n///\n/// @type cubic-bezier\n\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n","@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to change the `word-wrap` property.\n///\n/// @param {String} $wrap [break-word]\n///   Value for the `word-break` property.\n///\n/// @example scss - Usage\n///   .wrapper {\n///     @include word-wrap(break-word);\n///   }\n///\n/// @example css - CSS Output\n///   .wrapper {\n///     overflow-wrap: break-word;\n///     word-break: break-all;\n///     word-wrap: break-word;\n///   }\n\n@mixin word-wrap($wrap: break-word) {\n  overflow-wrap: $wrap;\n  word-wrap: $wrap;\n\n  @if $wrap == break-word {\n    word-break: break-all;\n  } @else {\n    word-break: $wrap;\n  }\n}\n","// The following features have been deprecated and will be removed in the next MAJOR version release\n\n@mixin inline-block {\n  display: inline-block;\n\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\n}\n\n// Selector Style Button\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n// Simple Button\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n// Shiny Button\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n// Pill Button\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    background-clip: padding-box;\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n// Flat Button\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: 0;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n\n// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\n}\n\n@function golden-ratio($value, $increment) {\n  @return modular-scale($increment, $value, $ratio: $golden);\n\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\n}\n\n@mixin box-sizing($box) {\n  @include prefixer(box-sizing, $box, webkit moz spec);\n\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\n}\n","/**\n * #.# Reset\n */\n\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, font, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\toutline: 0;\n\tfont-weight: inherit;\n\tfont-style: inherit;\n\tfont-size: 100%;\n\tfont-family: inherit;\n\tvertical-align: baseline;\n}\n\n/* remember to define focus styles! */\n\n:focus {\n\toutline: 0;\n}\n\nbody {\n\tline-height: 1;\n\t-webkit-text-size-adjust: none;\n}\n\nol, ul {\n\tlist-style: none;\n}\n\n/* tables still need 'cellspacing=\"0\"' in the markup */\n\ntable {\n\tborder-collapse: separate;\n\tborder-spacing: 0;\n}\n\ncaption, th, td {\n\ttext-align: left;\n\tfont-weight: normal;\n}\n\nblockquote {\n\t&:before, &:after {\n\t\tcontent: \"\";\n\t}\n}\n\nq {\n\t&:before, &:after {\n\t\tcontent: \"\";\n\t}\n}\n\nblockquote, q {\n\tquotes: \"\" \"\";\n}\n\n/**\n * #.# General\n */\n\nbody {\n\tfont-family: \"Helvetica Neue\", Arial, Helvetica, Geneva, sans-serif;\n\tfont-size: 13px;\n\tfont-weight: 400;\n}\n\n.container {\n\twidth: 100%;\n\tmargin: 0 auto;\n\tmax-width: 1024px;\n\tpadding: 0 15px;\n\tbox-sizing: border-box;\n}\n\n.clear {\n\tclear: both;\n}\n\n.clearfix {\n\t&:after {\n\t\tcontent: \".\";\n\t\tdisplay: block;\n\t\tclear: both;\n\t\tvisibility: hidden;\n\t\tline-height: 0;\n\t\theight: 0;\n\t}\n\tdisplay: inline-block;\n}\n\nhtml[xmlns] .clearfix {\n\tdisplay: block;\n}\n\n* html .clearfix {\n\theight: 1%;\n}","/**\n * #.# Page\n */\n\n/* This is the main page frame */\n\n#page-container {\n\twidth: 100%;\n\tbackground: #fdfdfd;\n\tpadding: 2.25% 4.5%;\n\tmargin: 30px 0 35px 0;\n\tbox-sizing: border-box;\n\tbox-shadow: 0 1px 2px rgba(0, 0, 0, 0.1), inset 0 0 2px rgba(0, 0, 0, 0.1125);\n\tborder: 1px solid #cbc9c7;\n}","/**\n * #.# Logo\n */\n\n#logo {\n\tposition: relative;\n\tmargin: 20px 0 25px 0;\n\t&.logo-centered {\n\t\ttext-align: center;\n\t}\n\ta.logo-link {\n\t\ttext-decoration: none;\n\t}\n\th1 {\n\t\tdisplay: inline-block;\n\t\tcolor: #555;\n\t\tfont-family: \"Terminal Dosis\", Arial, Helvetica, Geneva, sans-serif;\n\t\tfont-size: 52px;\n\t\tfont-weight: 200;\n\t\tmargin-bottom: 0.2em;\n\t}\n\th3 {\n\t\tdisplay: inline-block;\n\t\tcolor: #666;\n\t\tfont-size: 13px;\n\t}\n\timg {\n\t\tmax-width: 100%;\n\t\theight: auto;\n\t}\n\t#searchform {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tright: 0;\n\t\tmargin-top: -12px;\n\t\tlabel, #searchsubmit {\n\t\t\tdisplay: none;\n\t\t}\n\t\t#s {\n\t\t\twidth: 28px;\n\t\t\tpadding: 4px;\n\t\t\tborder: 1px solid #EEEEEE;\n\t\t\tborder-width: 0 0 1px 0;\n\t\t\tfont-size: 0.9em;\n\t\t\tfont-weight: 200;\n\t\t\tbox-sizing: border-box;\n\t\t\t@include transition( all 0.275s ease-in-out );\n\t\t\tbackground: #F9F9F9 url(images/mag.png) no-repeat 10px center;\n\t\t\tpadding-left: 30px;\n\t\t\tcolor: #777;\n\t\t\t&:focus {\n\t\t\t\twidth: 180px;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * #.# Search Form\n */\n\n@media screen and (max-width: 480px) {\n\t#logo #searchform {\n\t\tposition: static;\n\t\tmargin-top: 15px;\n\t\t#s {\n\t\t\twidth: 100%;\n\t\t\t&:focus {\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t}\n\t}\n}","/**\n * #.# Main Menu\n */\n\n#menu {\n\tul {\n\t\tdisplay: block;\n\t\tpadding: 0px;\n\t\ttext-align: center;\n\t\tmargin-bottom: 25px;\n\t\tborder: 1px solid #EEEEEE;\n\t\tborder-width: 1px 0;\n\t\tbackground: #F9F9F9;\n\t\tli {\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 22px 25px;\n\t\t\tposition: relative;\n\t\t\ta {\n\t\t\t\ttext-decoration: none;\n\t\t\t\tfont-size: 1em;\n\t\t\t\tcolor: #505050;\n\t\t\t}\n\t\t\tul {\n\t\t\t\tvisibility: hidden;\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\tbackground: #F5F5F5;\n\t\t\t\tz-index: 1010;\n\t\t\t\ttop: 100%;\n\t\t\t\tleft: 50%;\n\t\t\t\twidth: 160px;\n\t\t\t\tmargin-left: -80px;\n\t\t\t\tborder-top: 1px solid #E4E4E4;\n\t\t\t\tbackground-color: #F4F4F4;\n\t\t\t\tborder-color: #DDDDDD;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\t\t\tli ul {\n\t\t\t\tmargin-left: 0;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 160px;\n\t\t\t}\n\t\t\tul li a {\n\t\t\t\tdisplay: block;\n\t\t\t\tcolor: #606060;\n\t\t\t\tfont-size: 0.9em;\n\t\t\t}\n\t\t}\n\t\tul li {\n\t\t\twidth: 160px;\n\t\t\ttext-align: center;\n\t\t\tpadding: 10px 0;\n\t\t}\n\t\tli:hover > ul {\n\t\t\tvisibility: visible;\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\t.mobilenav-main-link {\n\t\tfont-weight: 500;\n\t\tfont-size: 14px;\n\t\t.mobile-nav-icon {\n\t\t\tfont-family: origami-icons;\n\t\t\tcolor: #666666;\n\t\t\tfont-size: 15px;\n\t\t\tdisplay: block;\n\t\t\tfloat: left;\n\t\t\twidth: 13px;\n\t\t\theight: 15px;\n\t\t\tmargin: -1px 8px 0 0;\n\t\t\t&:before {\n\t\t\t\tcontent: \"\\e601\";\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * #.# Post\n */\n\n.post {\n\tmargin-bottom: 30px;\n}\n\n/**\n * #.# Entry Title\n */\n\nh1 {\n\t&.entry-title, &.archive-title {\n\t\tfont-size: 2.2em;\n\t\tmargin: 1em 0 0.4em 0;\n\t\ttext-align: center;\n\t\tcolor: #333;\n\t\tfont-family: \"Dosis\", Arial, Helvetica, Geneva, sans-serif;\n\t\tfont-size: 28px;\n\t\tfont-weight: 200;\n\t\tline-height: 1.25em;\n\t}\n\t&.entry-title {\n\t\t&.noinfo {\n\t\t\tmargin-bottom: 30px;\n\t\t}\n\t\ta {\n\t\t\ttext-decoration: none;\n\t\t\tcolor: inherit;\n\t\t}\n\t}\n}\n\n.post {\n\t&:last-child {\n\t\tmargin-bottom: 0;\n\t}\n\t.post-info {\n\t\tmargin-bottom: 30px;\n\t\ttext-align: center;\n\t\tcolor: #A6A6A6;\n\t\tfont-size: 11.5px;\n\t\tstrong, a {\n\t\t\tfont-weight: 500;\n\t\t\ttext-decoration: none;\n\t\t\tcolor: #808080;\n\t\t}\n\t}\n}\n\n.post-navigation {\n\tmargin-top: 15px;\n\tmargin-bottom: 35px;\n\ta {\n\t\tdisplay: block;\n\t\tcolor: #505050;\n\t\ttext-decoration: none;\n\t\t&:hover {\n\t\t\tcolor: #333;\n\t\t}\n\t\t&[rel=prev] {\n\t\t\tfloat: left;\n\t\t}\n\t\t&[rel=next] {\n\t\t\tfloat: right;\n\t\t}\n\t}\n}\n\n@media screen and (max-width: 480px) {\n\t.post .content {\n\t\t@include column-count( 1 !important );\n\t}\n}","/**\n * #.# Featured Image\n */\n\n.post {\n\t.featured-image {\n\t\tposition: relative;\n\t\ttext-align: center;\n\t}\n\timg.main-image {\n\t\tmax-width: 100%;\n\t\theight: auto;\n\t\t&.mobile {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\t.below-content {\n\t\tcolor: #666;\n\t\tpadding: 20px 10px;\n\t\ttext-align: right;\n\t\tborder-style: solid;\n\t\tbackground: #FAFAFA;\n\t\tmargin-top: 30px;\n\t\tborder: 1px solid #EEEEEE;\n\t\tborder-width: 1px 0;\n\t\tbackground: #F9F9F9;\n\t\t.origami-icon-tag {\n\t\t\tfont-size: 19px;\n\t\t\tcolor: #999999;\n\t\t\tdisplay: block;\n\t\t\tmargin-top: -1px;\n\t\t\tmargin-right: 6px;\n\t\t\tmargin-left: 6px;\n\t\t\tfloat: left;\n\t\t}\n\t\t.origami-icon-more {\n\t\t\tfont-size: 19px;\n\t\t\tcolor: #999999;\n\t\t\tdisplay: block;\n\t\t\tmargin-top: -1px;\n\t\t\tmargin-right: 6px;\n\t\t\tmargin-left: 6px;\n\t\t\tfloat: left;\n\t\t\tfloat: right;\n\t\t\tmargin-top: -2px;\n\t\t}\n\t\tsvg {\n\t\t\tfill: #999;\n\t\t}\n\t\ta {\n\t\t\tcolor: #666;\n\t\t\ttext-decoration: none;\n\t\t\tfont-style: italic;\n\t\t}\n\t\tp {\n\t\t\theight: 1em;\n\t\t\tline-height: 1;\n\t\t}\n\t\t.tags {\n\t\t\tfloat: left;\n\t\t\t.the_tags {\n\t\t\t\tdisplay: inline;\n\t\t\t\ta:last-child:after {\n\t\t\t\t\tcontent: '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.read-more {\n\t\t\tfloat: right;\n\t\t}\n\t}\n\t.content {\n\t\tmargin-bottom: 20px;\n\t\tcolor: #606060;\n\t\tfont-size: 13px;\n\t}\n}\n\n@media screen and (max-width: 480px) {\n\t.post img.main-image {\n\t\t&.mobile {\n\t\t\tdisplay: block;\n\t\t}\n\t\t&.desktop {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n/**\n * #.# Content\n */\n\n.content-columns-2 .content {\n\t@include column-count( 2 );\n\t@include column-gap( 30px );\n}\n\n.content-columns-3 .content {\n\t@include column-count( 3 );\n\t@include column-gap( 30px );\n}\n\n.content-columns-4 .content {\n\t@include column-count( 4 );\n\t@include column-gap( 30px );\n}\n\n/**\n * #.# WP Core\n */\n\n.alignnone {\n\tmargin: 5px 20px 20px 0;\n}\n\n.aligncenter, div.aligncenter {\n\tdisplay: block;\n\tmargin: 20px auto 20px auto;\n}\n\n.alignright {\n\tfloat: right;\n\tmargin: 5px 0 20px 20px;\n}\n\n.alignleft {\n\tfloat: left;\n\tmargin: 5px 20px 20px 0;\n}\n\n.aligncenter {\n\tdisplay: block;\n\tmargin: 5px auto 5px auto;\n}\n\na img {\n\t&.alignright {\n\t\tfloat: right;\n\t\tmargin: 5px 0 20px 20px;\n\t}\n\t&.alignnone {\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t&.alignleft {\n\t\tfloat: left;\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t&.aligncenter {\n\t\tdisplay: block;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n}\n\n.wp-caption {\n\tbackground: #EFEFEF;\n\tborder: 1px solid #C0C0C0;\n\tmax-width: 100%;\n\t/* Image does not overflow the content area */\n\tpadding: 5px 3px 10px 3px;\n\ttext-align: center;\n\tbox-sizing: border-box;\n\tbox-shadow: 0px 0px 3px rgba(0, 0, 0, 0.25);\n\t&.alignnone, &.alignleft {\n\t\tmargin: 5px 20px 20px 0;\n\t}\n\t&.alignright {\n\t\tmargin: 5px 0 20px 20px;\n\t}\n\timg {\n\t\tborder: 0 none;\n\t\theight: auto;\n\t\tmargin: 0;\n\t\tmax-width: 98.5%;\n\t\tpadding: 0;\n\t\twidth: auto;\n\t}\n\tp.wp-caption-text {\n\t\tfont-size: 11px;\n\t\tmargin: 0;\n\t\tline-height: 1;\n\t\tpadding: 4px 5px 0 5px;\n\t\tcolor: #666;\n\t\tfont-style: italic;\n\t}\n}\n\n.sticky, .gallery-caption {\n}\n\n.content {\n\tline-height: 1.6em;\n\t* {\n\t\t&:first-child {\n\t\t\tmargin-top: 0px;\n\t\t}\n\t\t&:last-child {\n\t\t\tmargin-bottom: 0px;\n\t\t}\n\t}\n\tul {\n\t\tpadding-left: 1em;\n\t\tmargin-bottom: 1.5em;\n\t}\n\ta {\n\t\tcolor: #36659f;\n\t}\n\tp, ul, ol, dl {\n\t\tline-height: 1.6em;\n\t\tmargin: 2em 0;\n\t}\n\tul li {\n\t\tdisplay: list-item;\n\t\tline-height: 1.75em;\n\t\tlist-style: url(images/bullet.png);\n\t\tlist-style-position: outside;\n\t}\n\tol {\n\t\tlist-style: outside decimal;\n\t\tpadding-left: 2.5em;\n\t\tmargin-bottom: 1.5em;\n\t\tli {\n\t\t\tdisplay: list-item;\n\t\t\tline-height: 1.75em;\n\t\t}\n\t}\n\tul ul, ol ol {\n\t\tmargin-bottom: 0;\n\t}\n\tblockquote {\n\t\tpadding: 1.5em 20px 1.5em 60px;\n\t\tfont-style: italic;\n\t\tcolor: #666;\n\t\tposition: relative;\n\t\tcite {\n\t\t\tfont-weight: bold;\n\t\t\tcolor: #333;\n\t\t}\n\t\tp {\n\t\t\t&:first-child {\n\t\t\t\tmargin-top: 0;\n\t\t\t}\n\t\t\t&:last-child {\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\t\t}\n\t}\n\tstrong, b {\n\t\tfont-weight: bold;\n\t}\n\tem, i {\n\t\tfont-style: italic;\n\t}\n\timg {\n\t\tmax-width: 100%;\n\t\theight: auto;\n\t}\n\thr {\n\t\tborder: 0px;\n\t\tborder-top: 1px solid #CCC;\n\t}\n\tsup, sub {\n\t\tfont-size: 10px;\n\t\theight: 0;\n\t\tline-height: 1;\n\t\tposition: relative;\n\t\tvertical-align: baseline;\n\t}\n\tsup {\n\t\tbottom: 1ex;\n\t}\n\tsub {\n\t\ttop: .5ex;\n\t}\n\tdl {\n\t\tdt {\n\t\t\tfont-weight: bold;\n\t\t}\n\t\tdd {\n\t\t\tpadding-left: 1.5em;\n\t\t\tmargin-bottom: 1.5em;\n\t\t}\n\t}\n\th1, h2, h3, h4, h5, h6, strong {\n\t\tcolor: #404040;\n\t\tmargin: 1.5em 0;\n\t}\n\th1 {\n\t\tfont-size: 24px;\n\t}\n\th2 {\n\t\tfont-size: 20.4px;\n\t}\n\th3 {\n\t\tfont-size: 18.48px;\n\t}\n\th4 {\n\t\tfont-size: 16.32px;\n\t}\n\th5 {\n\t\tfont-size: 13.92px;\n\t}\n\th6 {\n\t\tfont-size: 12.48px;\n\t}\n\ttable {\n\t\twidth: 100%;\n\t\tmargin: 1em 0;\n\t}\n\tth {\n\t\tfont-size: 1.1em;\n\t\tfont-weight: bold;\n\t\tpadding: 8px;\n\t\tborder-bottom: 3px solid #C0C0C0;\n\t}\n\tthead th {\n\t\tborder-bottom: 3px solid #C0C0C0;\n\t}\n\ttd {\n\t\tpadding: 8px;\n\t}\n}\n\n/* Text meant only for screen readers. */\n.screen-reader-text {\n\tclip: rect(1px, 1px, 1px, 1px);\n\theight: 1px;\n\toverflow: hidden;\n\tposition: absolute !important;\n\tword-wrap: normal !important;\n\twidth: 1px;\n\n\t&:focus {\n\t\tbackground-color: #f1f1f1;\n\t\tbox-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);\n\t\tclip: auto !important;\n\t\tcolor: #0073aa;\n\t\tdisplay: block;\n\t\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\t\tfont-size: 14px;\n\t\tfont-weight: 600;\n\t\theight: auto;\n\t\tleft: 6px;\n\t\tline-height: normal;\n\t\tpadding: 15px 23px 14px;\n\t\ttext-decoration: none;\n\t\ttop: 7px;\n\t\twidth: auto;\n\t\tz-index: 100000;\n\t}\n}","/**\n * #.# Comments\n */\n\n#comments h3.comments-title {\n\tmargin: 20px 0;\n\tfont-size: 16px;\n\tfont-weight: 400;\n\tcolor: #333;\n}\n\n/**\n * #.# Comments\n */\n\n.comment {\n\tmargin-bottom: 45px;\n\t.avatar-container {\n\t\tfloat: left;\n\t}\n\t&.depth-1 .avatar-container {\n\t\tline-height: 0;\n\t\tpadding: 2px;\n\t\tborder: 1px solid #E8E8E8;\n\t\tbackground: #F2F2F2;\n\t}\n\t.comment-container {\n\t\tmargin-left: 86px;\n\t}\n\t.children {\n\t\t.comment .comment-container, .children {\n\t\t\tmargin-left: 71px;\n\t\t}\n\t\tmargin-top: 45px;\n\t\tmargin-left: 86px;\n\t}\n\t&.type-pingback .comment-container {\n\t\tmargin-left: 0;\n\t}\n}\n\n/**\n * #.# Comment Style\n */\n\n.comment-container .info {\n\tmargin-bottom: 10px;\n\tcolor: #666;\n\tfont-size: 12px;\n}\n\n.comment-reply-link {\n\ttext-decoration: none;\n\tfont-style: italic;\n}\n\n.comment-container .info .author {\n\tdisplay: block;\n\tfont-size: 13px;\n\tcolor: #444;\n\tmargin-bottom: 0.5em;\n\tfont-weight: bold;\n}\n\n.bypostauthor .info .author {\n\tfont-style: italic;\n}\n\n.comment-container {\n\t.info {\n\t\t.author a {\n\t\t\tcolor: #444;\n\t\t}\n\t\t.date {\n\t\t\tdisplay: block;\n\t\t\tcolor: #888;\n\t\t\tmargin-bottom: 1em;\n\t\t}\n\t}\n\ta.comment-reply-link {\n\t\tfont-size: 11px;\n\t\tmargin: 2px 0;\n\t\tdisplay: block;\n\t\tfloat: right;\n\t\tcolor: #666;\n\t\ttext-decoration: none;\n\t\tfont-style: italic;\n\t}\n}\n\n/**\n * #.# Respond\n */\n\n#comments .commentlist {\n\t#respond {\n\t\t/* Style comment for when replying to another post */\n\t\tborder: 1px solid #EEEEEE;\n\t\tmargin-bottom: 45px;\n\t\tpadding: 30px;\n\t\tbackground: #F9F9F9;\n\t\tmargin-left: 86px;\n\t}\n\t.children #respond {\n\t\tmargin-left: 71px;\n\t}\n}\n\n#respond #reply-title {\n\tmargin: 20px 0;\n\tfont-size: 16px;\n\tfont-weight: 400;\n\tcolor: #333;\n\tposition: relative;\n}\n\n#comments .commentlist #respond #reply-title {\n\tmargin-top: 0;\n}\n\n#respond {\n\t#reply-title #cancel-comment-reply-link {\n\t\tposition: absolute;\n\t\tright: 0;\n\t\ttop: 50%;\n\t\tmargin-top: -10px;\n\t\ttext-decoration: none;\n\t\tcursor: pointer;\n\t\tpadding: 4px 18px;\n\t\tcolor: #666;\n\t\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 0.75);\n\t\tfont-size: 11px;\n\t\tborder: 1px solid #c3c3c3;\n\t\tborder-radius: 3px;\n\n\t\t@include linear-gradient( rgba(249, 249, 249, 1) , rgba(237, 237, 237, 1), $fallback: rgb(249, 249, 249));\n\t\tbox-shadow: 0px 1px 1px rgba(0, 0, 0, 0.1), inset 0px -1px 0px rgba(255, 255, 255, 0.5);\n\t}\n\t.logged-in-as, .comment-notes {\n\t\tcolor: #999;\n\t\tmargin-bottom: 0.75em;\n\t}\n\t.logged-in-as a, .comment-notes a {\n\t\ttext-decoration: none;\n\t\tcolor: #666;\n\t}\n\tinput[type=text] {\n\t\tdisplay: block;\n\t\twidth: 420px;\n\t\tmax-width: 100%;\n\t\tcolor: #606060;\n\t\tmargin-bottom: 7px;\n\t\tfont-size: 13px;\n\t\tpadding: 4px;\n\t\tborder: 1px solid #CCC;\n\t\tbox-shadow: 0px 1px 1px rgba(0, 0, 0, 0.1);\n\t\tbox-sizing: border-box;\n\t\t-webkit-appearance: none;\n\t\t-webkit-border-radius: 0px;\n\t}\n\ttextarea[name=comment] {\n\t\tmargin: 10px 0;\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\tpadding: 10px;\n\t\tborder: 1px solid #CCC;\n\t\tcolor: #606060;\n\t\tbox-shadow: 0px 1px 1px rgba(0, 0, 0, 0.1);\n\t\tfont-size: 13px;\n\t\tbox-sizing: border-box;\n\t\t-webkit-appearance: none;\n\t\t-webkit-border-radius: 0px;\n\t}\n\tinput[type=submit] {\n\t\tcursor: pointer;\n\t\tpadding: 4px 18px;\n\t\tcolor: #666;\n\t\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 0.75);\n\t\tfont-size: 11px;\n\t\tborder: 1px solid #c3c3c3;\n\t\tborder-radius: 3px;\n\n\t\t@include linear-gradient( rgba(249, 249, 249, 1) , rgba(237, 237, 237, 1), $fallback: rgb(249, 249, 249));\n\t\tbox-shadow: 0px 1px 1px rgba(0, 0, 0, 0.1), inset 0px -1px 0px rgba(255, 255, 255, 0.5);\n\t}\n\t.form-allowed-tags {\n\t\tmargin: 10px 0;\n\t\tfont-size: 10px;\n\t\tcolor: #999;\n\t}\n}\n\n.commentform-error {\n\tmargin-bottom: 5px;\n\tbackground: #f3dfdf;\n\tborder: 1px solid #dfb6b7;\n\tpadding: 5px;\n\tcolor: #946d6e;\n\tfont-size: 12px;\n\tborder-radius: 3px;\n}\n\n.comments-disabled {\n\tmargin-top: 30px;\n}","/**\n * #.# Footer\n */\n\n/**\n * #.# Footer Widgets\n */\n\n#footer-widgets {\n\tpadding: 20px 0;\n\tmargin-top: 30px;\n\tborder-top: 1px solid #EEEEEE;\n\tbackground-color: #F9F9F9;\n\twidth: 100%;\n}\n\n#footer-widgets-wrapper {\n\tmargin-bottom: -30px;\n}\n\n#footer-widgets {\n\t.widget {\n\t\tbox-sizing: border-box;\n\t\tcolor: #777;\n\t\tpadding: 0 15px;\n\t\tword-wrap: break-word;\n\t\tfloat: left;\n\t\tmargin-bottom: 30px;\n\t\timg {\n\t\t\tmax-width: 100%;\n\t\t\theight: auto;\n\t\t}\n\t}\n\th2.widgettitle {\n\t\tfont-family: \"Dosis\", Arial, Helvetica, Geneva, sans-serif;\n\t\tfont-weight: 400;\n\t\tfont-size: 1.2em;\n\t\tmargin-bottom: 20px;\n\t\tcolor: #333;\n\t}\n\ta {\n\t\ttext-decoration: none;\n\t\tcolor: #505050;\n\t}\n\tli {\n\t\tline-height: 1.75em;\n\t}\n\tul ul {\n\t\tmargin-left: 0.75em;\n\t}\n}\n\n#footer {\n\tmargin-bottom: 35px;\n\tcolor: #888;\n\tfont-size: 0.85em;\n\tborder: transparent;\n\tborder-width: 0 1px;\n\tcolor: #999999;\n\tpadding: 0px 5px;\n\ttext-align: center;\n\t.copyright {\n\t\tmargin-bottom: 0.75em;\n\t}\n\t.designed {\n\t}\n\ta {\n\t\ttext-decoration: none;\n\t\tcolor: #777;\n\t}\n}","/**\n * #.# Archive Page\n */\n\n/* The archive page template */\n\n#blog-archives {\n\tmargin-top: 30px;\n\th2 {\n\t\tfont-family: 'Terminal Dosis', sans-serif;\n\t\tfont-weight: 400;\n\t\tfont-size: 1.75em;\n\t\tmargin-bottom: 0.75em;\n\t}\n\tul {\n\t\tmargin-bottom: 25px;\n\t\ta {\n\t\t\tcolor: #666;\n\t\t\ttext-decoration: none;\n\t\t\t&:hover {\n\t\t\t\tcolor: #333;\n\t\t\t\ttext-decoration: underline;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * #.# Post Archives\n */\n\nh1.archive-title {\n\tmargin: 30px 0;\n\ttext-align: center;\n}\n\n#posts-nav {\n\tmargin-top: 30px;\n\ttext-align: center;\n\tcolor: #AAA;\n\ta {\n\t\tcolor: #505050;\n\t\ttext-decoration: none;\n\t}\n}","/**\n * #.# Widgets\n */\n\n/**\n * #.# Button\n */\n\n.widget .button {\n\tdisplay: inline-block;\n\tbackground: #484744;\n\tborder: none;\n\tcolor: #FFF;\n\tcursor: pointer;\n\t/* Improves usability and consistency of cursor style between image-type 'input' and others */\n\ttext-decoration: none;\n\tfont-size: 13px;\n\tpadding: 12px 35px;\n\t-moz-border-radius: 3px;\n\t-webkit-border-radius: 3px;\n\tborder-radius: 3px;\n}\n\n.button-container {\n\t&.align-center {\n\t\ttext-align: center;\n\t}\n\t&.align-left {\n\t\ttext-align: left;\n\t}\n\t&.align-right {\n\t\ttext-align: right;\n\t}\n\t&.align-full .button {\n\t\tdisplay: block;\n\t\ttext-align: center;\n\t}\n}\n\n/**\n * #.# Call To Action\n */\n\n.widget_call-to-action {\n\tpadding: 25px 15px;\n\tborder: 1px solid #EEEEEE;\n\tborder-width: 1px 0;\n\tbackground: #F9F9F9;\n\tposition: relative;\n\t.cta-headline {\n\t\tmargin-bottom: 0;\n\t\tcolor: #444444;\n\t}\n\t.cta-sub-text {\n\t\tmargin-top: 10px;\n\t\tmargin-bottom: 0;\n\t\tcolor: #777777;\n\t}\n\t.button {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tright: 15px;\n\t\tmargin-top: -22px;\n\t\tcolor: #F3F3F3;\n\t}\n}\n\n.content .widget_call-to-action .button {\n\tcolor: #F3F3F3;\n}\n\n@media screen and (max-width: 480px) {\n\t.widget_call-to-action .button {\n\t\tposition: static;\n\t\tmargin-top: 10px;\n\t\tdisplay: block;\n\t\ttext-align: center;\n\t}\n}\n\n/**\n * #.# Icon and Text\n */\n\n.widget_icon-text {\n\th3.widget-title {\n\t\tfont-size: 15px;\n\t\tline-height: 1.5em;\n\t\tmargin-bottom: 0.5em;\n\t\ta {\n\t\t\tcolor: inherit;\n\t\t\ttext-decoration: none;\n\t\t}\n\t}\n\t.feature-icon {\n\t\tfloat: left;\n\t\twidth: 32px;\n\t\theight: 32px;\n\t\timg {\n\t\t\tmax-width: 100%;\n\t\t\theight: auto;\n\t\t}\n\t}\n\t.widget-text {\n\t\tmargin-left: 45px;\n\t}\n}\n\n/**\n * #.# Headline Widget\n */\n\n.widget_headline {\n\t.widget-title {\n\t\tspan {\n\t\t\tdisplay: block;\n\t\t\tline-height: 1.3em;\n\t\t}\n\t\t.size-medium {\n\t\t\tfont-size: 130%;\n\t\t}\n\t\t.size-large {\n\t\t\tfont-size: 160%;\n\t\t}\n\t\t.size-extra-large {\n\t\t\tfont-size: 190%;\n\t\t}\n\t}\n\t.align-left {\n\t\ttext-align: left;\n\t}\n\t.align-center {\n\t\ttext-align: center;\n\t}\n\t.align-right {\n\t\ttext-align: right;\n\t}\n}\n\n.widget img {\n\tmax-width: 100%;\n\theight: auto;\n}","/**\n * #.# Origami Icons\n */\n\n@font-face {\n\tfont-family: 'origami-icons';\n\tsrc: url('css/icons/origami-icons.eot?9l1bs6');\n\tsrc: url('css/icons/origami-icons.eot?#iefix9l1bs6') format(\"embedded-opentype\"), url('css/icons/origami-icons.woff?9l1bs6') format(\"woff\"), url('css/icons/origami-icons.ttf?9l1bs6') format(\"truetype\"), url('css/icons/origami-icons.svg?9l1bs6#icomoon') format(\"svg\");\n\tfont-weight: normal;\n\tfont-style: normal;\n}\n\n[class^=\"origami-icon-\"], [class*=\" origami-icon-\"],\n#menu .mobilenav-main-link .mobile-nav-icon {\n\tfont-family: 'origami-icons';\n\tspeak: none;\n\tfont-style: normal;\n\tfont-weight: normal;\n\tfont-variant: normal;\n\ttext-transform: none;\n\tline-height: 1;\n\t/* Better Font Rendering =========== */\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n}\n\n.origami-icon-mag:before {\n\tcontent: \"\\e600\";\n}\n\n.origami-icon-menu:before {\n\tcontent: \"\\e601\";\n}\n\n.origami-icon-more:before {\n\tcontent: \"\\e602\";\n}\n\n.origami-icon-tag:before {\n\tcontent: \"\\e603\";\n}","/*--------------------------------------------------------------\n## - Jetpack Infinite Scroll\n--------------------------------------------------------------*/\n// Globally hidden elements when Infinite Scroll is supported and in use.\n.infinite-scroll #posts-nav, // Older / Newer posts navigation (always hidden).\n.infinite-scroll .woocommerce-pagination, // WooCommercep pagination navigation (always hidden).\n.infinite-scroll.neverending #footer-widgets { // Theme footer (when set to scrolling).\n\tdisplay: none;\n}\n\n// When Infinite Scroll has reached its end we need to re-display elements that were hidden (via .neverending) before.\n.infinity-end.neverending #footer-widgets {\n\tdisplay: block;\n} \n\n#infinite-handle {\n\ttext-align: center;\n\tspan {\n\t\tbackground: none;\n\t\tcolor: #505050;\n\t}\n}\n\n.infinite-loader .spinner {\n\tleft: 50% !important;\n}"],"names":[],"mappings":"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"}